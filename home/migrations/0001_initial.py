# Generated by Django 3.2.12 on 2022-05-18 04:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='custom_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('delete_date', models.DateTimeField(blank=True, null=True)),
                ('confirm_token', models.CharField(blank=True, max_length=50, null=True)),
                ('social_token', models.CharField(blank=True, max_length=255, null=True)),
                ('social_registration', models.CharField(blank=True, max_length=255, null=True)),
                ('social_account', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'custom_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('PID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('productID', models.CharField(max_length=255, unique=True)),
                ('product', models.CharField(max_length=255, unique=True)),
                ('productPromo', models.CharField(blank=True, max_length=255, null=True)),
                ('promoPrice', models.FloatField(blank=True, max_length=255, null=True)),
                ('annaulSubProd', models.CharField(blank=True, max_length=255, null=True)),
                ('annaulSub', models.CharField(blank=True, max_length=255, null=True)),
                ('monthlySubProd', models.CharField(blank=True, max_length=255, null=True)),
                ('monthlySub', models.CharField(blank=True, max_length=255, null=True)),
                ('localeId', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Product',
            },
        ),
        migrations.CreateModel(
            name='user_preference',
            fields=[
                ('udid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('signature', models.ImageField(null=True, upload_to='')),
                ('export_quality', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=7)),
                ('Language', models.CharField(max_length=20)),
                ('user_stared_templates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('user_stared_backgrounds', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('user_stared_stickers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('user_stared_Textart', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('user_stared_colors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('user_stared_fonts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('most_used_fonts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('user_custom_colors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('instagram_follower', models.BooleanField(default=False)),
                ('grid_snapping', models.BooleanField(default=False)),
                ('user_recent_text', models.CharField(max_length=255)),
                ('appearance_mode', models.CharField(choices=[('Light', 'Light'), ('Dark', 'Dark'), ('Auto', 'Auto')], max_length=7)),
                ('enable_iCloud_backup', models.BooleanField(default=False)),
                ('save_projects_automatically', models.BooleanField(default=False)),
                ('save_projects_on_export', models.BooleanField(default=False)),
                ('notifications_permission', models.BooleanField(default=False)),
                ('inApp_notifications_permission', models.BooleanField(default=False)),
                ('photo_library_permission', models.BooleanField(default=False)),
                ('digital_riyals_rewards', models.IntegerField()),
                ('enable_touch', models.BooleanField(default=False)),
                ('app_theme', models.CharField(choices=[('Option1', 'Option1'), ('Option2', 'Option2'), ('Option3', 'Option3')], max_length=7)),
                ('always_crop', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'user_preference',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), max_length=50, null=True, size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('pid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('pstatus', models.CharField(max_length=20)),
                ('auto_renew_status', models.BooleanField(default=False)),
                ('is_in_billing_retry_period', models.BooleanField(default=False)),
                ('is_in_intro_offer_period', models.BooleanField(default=False)),
                ('is_trial_period', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('subscription_type', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.product')),
                ('username', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Purchase',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('uid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=7, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('pass_update', models.DateField(blank=True, null=True)),
                ('pass_forgot', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('lat', models.FloatField(blank=True, max_length=30, null=True)),
                ('long', models.FloatField(blank=True, max_length=30, null=True)),
                ('snap', models.CharField(blank=True, max_length=30, null=True)),
                ('fb', models.CharField(blank=True, max_length=30, null=True)),
                ('insta', models.CharField(blank=True, max_length=30, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('bitmoji', models.ImageField(blank=True, null=True, upload_to='')),
                ('delete_account', models.BooleanField(default=False)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('count_for_forgot_pass', models.PositiveSmallIntegerField(default=0)),
                ('time_for_forgot_pass', models.DateTimeField(blank=True, null=True)),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='application_data',
            fields=[
                ('aid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('UID', models.CharField(max_length=200, unique=True)),
                ('inApp_Products', models.CharField(max_length=100)),
                ('Purchase_date', models.DateTimeField(blank=True, null=True)),
                ('Purchased_product', models.CharField(max_length=100)),
                ('Device_Model', models.CharField(max_length=50)),
                ('operating_system', models.CharField(max_length=100)),
                ('Device_Storage', models.CharField(max_length=10)),
                ('Lunch_count', models.IntegerField()),
                ('Push_Notification_Status', models.BooleanField(default=False)),
                ('Library_permission_Status', models.BooleanField(default=False)),
                ('latitude', models.FloatField(blank=True, max_length=30, null=True)),
                ('longitude', models.FloatField(blank=True, max_length=30, null=True)),
                ('Carrier', models.CharField(max_length=100)),
                ('App_Last_Opened', models.DateTimeField(blank=True, null=True)),
                ('Purchase_attempts', models.IntegerField()),
                ('Grace_Period', models.CharField(max_length=100)),
                ('Remaining_grace_period_days', models.IntegerField()),
                ('Number_of_projects', models.IntegerField()),
                ('Total_time_spent', models.CharField(max_length=10)),
                ('total_ads_served', models.IntegerField()),
                ('Registered_user', models.BooleanField(default=False)),
                ('Push_Notification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Application data',
            },
        ),
    ]
